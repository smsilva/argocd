{{if .Values.useEtcdOperator}}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
  name: cloud-conn-service-account
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
    vizier-updater-dep: "true"
  name: updater-service-account
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
  name: pl
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  allowPrivilegeEscalation: true
  allowedCapabilities:
  - '*'
  fsGroup:
    rule: RunAsAny
  hostIPC: true
  hostNetwork: true
  hostPID: true
  hostPorts:
  - max: 65535
    min: 0
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
  name: pl-psp
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
rules:
- apiGroups:
  - policy
  resourceNames:
  - pl
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
    vizier-updater-dep: "true"
  name: pl-updater-role
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
rules:
- apiGroups:
  - ""
  - apps
  - rbac.authorization.k8s.io
  - extensions
  - etcd.database.coreos.com
  - batch
  - nats.io
  - policy
  resources:
  - clusterroles
  - clusterrolebindings
  - configmaps
  - secrets
  - pods
  - services
  - deployments
  - daemonsets
  - persistentvolumes
  - persistentvolumeclaims
  - roles
  - rolebindings
  - serviceaccounts
  - etcdclusters.etcd.database.coreos.com
  - etcdclusters
  - statefulsets
  - cronjobs
  - jobs
  - natsclusters
  - podsecuritypolicies
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
  name: pl-cloud-connector-role
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - services
  - endpoints
  - namespaces
  - jobs
  - events
  - pods/log
  verbs:
  - '*'
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: pl-node-view
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: pl-vizier-certmgr
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - secrets
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: pl-vizier-metadata
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - endpoints
  - namespaces
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
  name: pl-psp-binding
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pl-psp
subjects:
- kind: ServiceAccount
  name: updater-service-account
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
    vizier-updater-dep: "true"
  name: pl-updater-binding
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pl-updater-role
subjects:
- kind: ServiceAccount
  name: updater-service-account
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
  name: pl-cloud-connector-binding
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pl-cloud-connector-role
subjects:
- kind: ServiceAccount
  name: cloud-conn-service-account
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: pl-node-view-binding
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pl-node-view
subjects:
- kind: ServiceAccount
  name: default
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: pl-vizier-certmgr
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pl-vizier-certmgr
subjects:
- kind: ServiceAccount
  name: default
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: pl-vizier-metadata-binding
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pl-vizier-metadata
subjects:
- kind: ServiceAccount
  name: default
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: v1
data:
  PL_CLIENT_TLS_CERT: /certs/client.crt
  PL_CLIENT_TLS_KEY: /certs/client.key
  PL_SERVER_TLS_CERT: /certs/server.crt
  PL_SERVER_TLS_KEY: /certs/server.key
  PL_TLS_CA_CERT: /certs/ca.crt
kind: ConfigMap
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
  name: pl-cloud-connector-tls-config
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: v1
data:
  PL_CLIENT_TLS_CERT: /certs/client.crt
  PL_CLIENT_TLS_KEY: /certs/client.key
  PL_SERVER_TLS_CERT: /certs/server.crt
  PL_SERVER_TLS_KEY: /certs/server.key
  PL_TLS_CA_CERT: /certs/ca.crt
kind: ConfigMap
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: pl-tls-config
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: v1
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address: { address: 0.0.0.0, port_value: 55000 }
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              access_log:
              - name: envoy.file_access_log
                config:
                  path: "/dev/stdout"
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/px.vizier.services.query_broker"
                    route:
                      cluster: query_broker_service
                  - match:
                      prefix: "/px.api.vizierpb.VizierService"
                    route:
                      cluster: query_broker_service
                      timeout: 3600s
                  - match:
                      prefix: "/px.api.vizierpb.VizierDebugService"
                    route:
                      cluster: cloud_connector_service
                      timeout: 3600s
                  - match:
                      prefix: "/healthz"
                    route:
                      cluster: query_broker_service
                  cors:
                    allow_origin_string_match:
                    - prefix: "*"
                    allow_methods: GET, PUT, DELETE, POST, OPTIONS
                    allow_headers: >-
                      keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,
                      x-accept-content-transfer-encoding,x-accept-response-streaming,
                      x-user-agent,x-grpc-web,authorization,grpc-timeout
                    max_age: "1728000"
                    expose_headers: grpc-status,grpc-message,grpc-timeout
              http_filters:
              - name: envoy.grpc_web
              - name: envoy.cors
              - name: envoy.router
          tls_context:
            common_tls_context:
              alpn_protocols: "h2,http/1.1"
              tls_certificates:
                - certificate_chain:
                    filename: "/proxy-certs/tls.crt"
                  private_key:
                    filename: "/proxy-certs/tls.key"
      clusters:
      - name: query_broker_service
        connect_timeout: 0.25s
        type: logical_dns
        http2_protocol_options: {}
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: vizier-query-broker.{{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}.svc
            port_value: 50300
        tls_context:
          common_tls_context:
            tls_certificates:
              - certificate_chain:
                  filename: "/certs/client.crt"
                private_key:
                  filename: "/certs/client.key"

      - name: cloud_connector_service
        connect_timeout: 0.25s
        type: logical_dns
        http2_protocol_options: {}
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: vizier-cloud-connector.{{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}.svc
            port_value: 50800
        tls_context:
          common_tls_context:
            tls_certificates:
              - certificate_chain:
                  filename: "/certs/client.crt"
                private_key:
                  filename: "/certs/client.key"

      - name: api_service
        connect_timeout: 0.25s
        type: logical_dns
        http2_protocol_options: {}
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: vizier-api-service.{{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}.svc
            port_value: 50200
        tls_context:
          common_tls_context:
            tls_certificates:
              - certificate_chain:
                  filename: "/certs/client.crt"
                private_key:
                  filename: "/certs/client.key"
kind: ConfigMap
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: proxy-envoy-config
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: kelvin-service
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  clusterIP: None
  ports:
  - name: tcp-http2
    port: 59300
    protocol: TCP
    targetPort: 59300
  selector:
    app: pl-monitoring
    component: vizier
    name: kelvin
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: vizier-certmgr
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  ports:
  - name: tcp-http2
    port: 50900
    protocol: TCP
    targetPort: 50900
  selector:
    app: pl-monitoring
    component: vizier
    name: vizier-certmgr
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
  name: vizier-cloud-connector
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  ports:
  - name: tcp-http2
    port: 50800
    protocol: TCP
    targetPort: 50800
  selector:
    app: pl-monitoring
    component: vizier
    name: vizier-cloud-connector
    vizier-bootstrap: "true"
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: vizier-metadata
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  ports:
  - name: tcp-http2
    port: 50400
    protocol: TCP
    targetPort: 50400
  selector:
    app: pl-monitoring
    component: vizier
    name: vizier-metadata
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: vizier-proxy-service
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  ports:
  - name: tcp-https
    port: 443
    protocol: TCP
    targetPort: 55000
  selector:
    app: pl-monitoring
    component: vizier
    name: vizier-proxy
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: vizier-query-broker
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  ports:
  - name: tcp-http2
    port: 50300
    protocol: TCP
    targetPort: 50300
  - name: tcp-grpc-web
    port: 50305
    protocol: TCP
    targetPort: 50305
  selector:
    app: pl-monitoring
    component: vizier
    name: vizier-query-broker
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: kelvin
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  selector:
    matchLabels:
      app: pl-monitoring
      component: vizier
      name: kelvin
  template:
    metadata:
      annotations:
        {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
      labels:
        {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
        app: pl-monitoring
        component: vizier
        name: kelvin
        plane: data
    spec:
      containers:
      - env:
        - name: PL_HOST_PATH
          value: /host
        - name: PL_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PL_CLUSTER_ID
          valueFrom:
            secretKeyRef:
              key: cluster-id
              name: pl-cluster-secrets
        - name: PL_SENTRY_DSN
          value: ""
        - name: PL_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PL_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: PL_JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              key: jwt-signing-key
              name: pl-cluster-secrets
        - name: PL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TCMALLOC_SAMPLE_PARAMETER
          value: "1048576"
        envFrom:
        - configMapRef:
            name: pl-tls-config
        image: gcr.io/pixie-oss/pixie-prod/vizier/kelvin_image:0.7.12
        name: app
        ports:
        - containerPort: 59300
        resources: {}
        volumeMounts:
        - mountPath: /certs
          name: certs
        - mountPath: /sys
          name: sys
          readOnly: true
      initContainers:
      - command:
        - sh
        - -c
        - 'set -x; URL="https://${SERVICE_NAME}:${SERVICE_PORT}/readyz"; until [ $(curl
          -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200 ]; do echo "waiting
          for ${URL}" sleep 2; done; '
        env:
        - name: SERVICE_NAME
          value: vizier-cloud-connector
        - name: SERVICE_PORT
          value: "50800"
        image: gcr.io/pixie-prod/pixie-prod-artifacts/curl:1.0
        name: cc-wait
      - command:
        - sh
        - -c
        - 'set -x; URL="https://${SERVICE_NAME}:${SERVICE_PORT}/healthz"; until [
          $(curl -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200 ]; do
          echo "waiting for ${URL}" sleep 2; done; '
        env:
        - name: SERVICE_NAME
          value: vizier-query-broker
        - name: SERVICE_PORT
          value: "50300"
        image: gcr.io/pixie-prod/pixie-prod-artifacts/curl:1.0
        name: qb-wait
      terminationGracePeriodSeconds: 30
      volumes:
      - name: certs
        secret:
          secretName: service-tls-certs
      - hostPath:
          path: /sys
          type: Directory
        name: sys
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: vizier-certmgr
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pl-monitoring
      component: vizier
      name: vizier-certmgr
  template:
    metadata:
      annotations:
        {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
      labels:
        {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
        app: pl-monitoring
        component: vizier
        name: vizier-certmgr
        plane: control
    spec:
      containers:
      - env:
        - name: PL_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PL_CLUSTER_ID
          valueFrom:
            secretKeyRef:
              key: cluster-id
              name: pl-cluster-secrets
        - name: PL_SENTRY_DSN
          value: ""
        - name: PL_JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              key: jwt-signing-key
              name: pl-cluster-secrets
        - name: PL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: pl-tls-config
        image: gcr.io/pixie-oss/pixie-prod/vizier/certmgr_server_image:0.7.12
        livenessProbe:
          httpGet:
            path: /healthz
            port: 50900
            scheme: HTTPS
        name: app
        ports:
        - containerPort: 50900
        volumeMounts:
        - mountPath: /certs
          name: certs
      initContainers:
      - command:
        - sh
        - -c
        - 'set -x; URL="https://${SERVICE_NAME}:${SERVICE_PORT}/readyz"; until [ $(curl
          -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200 ]; do echo "waiting
          for ${URL}" sleep 2; done; '
        env:
        - name: SERVICE_NAME
          value: vizier-cloud-connector
        - name: SERVICE_PORT
          value: "50800"
        image: gcr.io/pixie-prod/pixie-prod-artifacts/curl:1.0
        name: cc-wait
      volumes:
      - name: certs
        secret:
          secretName: service-tls-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
  name: vizier-cloud-connector
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pl-monitoring
      component: vizier
      name: vizier-cloud-connector
      vizier-bootstrap: "true"
  template:
    metadata:
      annotations:
        {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
      labels:
        {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
        app: pl-monitoring
        component: vizier
        name: vizier-cloud-connector
        plane: control
        vizier-bootstrap: "true"
    spec:
      containers:
      - env:
        - name: PL_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PL_JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              key: jwt-signing-key
              name: pl-cluster-secrets
        - name: PL_CLUSTER_ID
          valueFrom:
            secretKeyRef:
              key: cluster-id
              name: pl-cluster-secrets
              optional: true
        - name: PL_SENTRY_DSN
          value: ""
        - name: PL_DEPLOY_KEY
          valueFrom:
            secretKeyRef:
              key: deploy-key
              name: pl-deploy-secrets
              optional: true
        - name: PL_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PL_MAX_EXPECTED_CLOCK_SKEW
          value: "2000"
        - name: PL_RENEW_PERIOD
          value: "5000"
        envFrom:
        - configMapRef:
            name: pl-cloud-config
        - configMapRef:
            name: pl-cloud-connector-tls-config
        - configMapRef:
            name: pl-cloud-connector-bootstrap-config
            optional: true
        - configMapRef:
            name: pl-cluster-config
            optional: true
        image: gcr.io/pixie-oss/pixie-prod/vizier/cloud_connector_server_image:0.7.12
        livenessProbe:
          httpGet:
            path: /healthz
            port: 50800
            scheme: HTTPS
        name: app
        ports:
        - containerPort: 50800
        volumeMounts:
        - mountPath: /certs
          name: certs
      serviceAccountName: cloud-conn-service-account
      volumes:
      - name: certs
        secret:
          secretName: service-tls-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: vizier-metadata
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pl-monitoring
      component: vizier
      name: vizier-metadata
  template:
    metadata:
      annotations:
        {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
      labels:
        {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
        app: pl-monitoring
        component: vizier
        name: vizier-metadata
        plane: control
    spec:
      containers:
      - env:
        - name: PL_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PL_CLUSTER_ID
          valueFrom:
            secretKeyRef:
              key: cluster-id
              name: pl-cluster-secrets
        - name: PL_SENTRY_DSN
          value: ""
        - name: PL_JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              key: jwt-signing-key
              name: pl-cluster-secrets
        - name: PL_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PL_MAX_EXPECTED_CLOCK_SKEW
          value: "2000"
        - name: PL_RENEW_PERIOD
          value: "5000"
        envFrom:
        - configMapRef:
            name: pl-tls-config
        - configMapRef:
            name: pl-cluster-config
            optional: true
        image: gcr.io/pixie-oss/pixie-prod/vizier/metadata_server_image:0.7.12
        livenessProbe:
          httpGet:
            path: /healthz
            port: 50400
            scheme: HTTPS
          initialDelaySeconds: 120
          periodSeconds: 10
        name: app
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 50400
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - mountPath: /certs
          name: certs
      initContainers:
      - command:
        - sh
        - -c
        - set -xe; URL="${PROTOCOL}://${SERVICE_NAME}:${SERVICE_PORT}${HEALTH_PATH}";
          until [ $(curl -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200
          ]; do echo "waiting for ${URL}"; sleep 2; done;
        env:
        - name: SERVICE_NAME
          value: pl-nats-mgmt
        - name: SERVICE_PORT
          value: "8222"
        - name: HEALTH_PATH
          value: ""
        - name: PROTOCOL
          value: http
        image: gcr.io/pixie-prod/pixie-prod-artifacts/curl:1.0
        name: nats-wait
      - command:
        - sh
        - -c
        - set -xe; ETCD_PATH="${PL_MD_ETCD_SERVER}"; if [ ! ${ETCD_PATH} ]; then ETCD_PATH="${DEFAULT_ETCD_PATH}";
          fi; URL="${ETCD_PATH}${HEALTH_PATH}"; until [ $(curl --cacert /certs/ca.crt
          --key /certs/client.key --cert /certs/client.crt -m 0.5 -s -o /dev/null
          -w "%{http_code}" -k ${URL}) -eq 200 ]; do echo "waiting for ${URL}"; sleep
          2; done;
        env:
        - name: HEALTH_PATH
          value: /health
        - name: DEFAULT_ETCD_PATH
          value: https://etcd.{{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}.svc:2379
        envFrom:
        - configMapRef:
            name: pl-cluster-config
            optional: true
        image: gcr.io/pixie-prod/pixie-prod-artifacts/curl:1.0
        name: etcd-wait
        volumeMounts:
        - mountPath: /certs
          name: certs
      volumes:
      - name: certs
        secret:
          secretName: service-tls-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: vizier-proxy
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pl-monitoring
      component: vizier
      name: vizier-proxy
  template:
    metadata:
      annotations:
        {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
      labels:
        {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
        app: pl-monitoring
        component: vizier
        name: vizier-proxy
        plane: control
    spec:
      containers:
      - args:
        - -c
        - /etc/envoy.yaml
        - --service-cluster
        - $(POD_NAME)
        command:
        - envoy
        env:
        - name: PL_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PL_CLUSTER_ID
          valueFrom:
            secretKeyRef:
              key: cluster-id
              name: pl-cluster-secrets
        - name: PL_SENTRY_DSN
          value: ""
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: envoyproxy/envoy:v1.12.2
        name: app
        ports:
        - containerPort: 55000
        volumeMounts:
        - mountPath: /etc/envoy.yaml
          name: envoy-yaml
          subPath: envoy.yaml
        - mountPath: /proxy-certs
          name: proxy-certs
        - mountPath: /certs
          name: certs
      initContainers:
      - command:
        - sh
        - -c
        - 'set -x; URL="https://${SERVICE_NAME}:${SERVICE_PORT}/readyz"; until [ $(curl
          -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200 ]; do echo "waiting
          for ${URL}" sleep 2; done; '
        env:
        - name: SERVICE_NAME
          value: vizier-cloud-connector
        - name: SERVICE_PORT
          value: "50800"
        image: gcr.io/pixie-prod/pixie-prod-artifacts/curl:1.0
        name: cc-wait
      volumes:
      - name: certs
        secret:
          secretName: service-tls-certs
      - configMap:
          name: proxy-envoy-config
        name: envoy-yaml
      - name: proxy-certs
        secret:
          secretName: proxy-tls-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: vizier-query-broker
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pl-monitoring
      component: vizier
      name: vizier-query-broker
  template:
    metadata:
      annotations:
        {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
      labels:
        {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
        app: pl-monitoring
        component: vizier
        name: vizier-query-broker
        plane: control
    spec:
      containers:
      - env:
        - name: PL_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PL_CLUSTER_ID
          valueFrom:
            secretKeyRef:
              key: cluster-id
              name: pl-cluster-secrets
        - name: PL_SENTRY_DSN
          value: ""
        - name: PL_JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              key: jwt-signing-key
              name: pl-cluster-secrets
        - name: PL_POD_IP_ADDRESS
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: PL_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: pl-tls-config
        image: gcr.io/pixie-oss/pixie-prod/vizier/query_broker_server_image:0.7.12
        livenessProbe:
          httpGet:
            path: /healthz
            port: 50300
            scheme: HTTPS
        name: app
        ports:
        - containerPort: 50300
        volumeMounts:
        - mountPath: /certs
          name: certs
      initContainers:
      - command:
        - sh
        - -c
        - 'set -x; URL="https://${SERVICE_NAME}:${SERVICE_PORT}/readyz"; until [ $(curl
          -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200 ]; do echo "waiting
          for ${URL}" sleep 2; done; '
        env:
        - name: SERVICE_NAME
          value: vizier-cloud-connector
        - name: SERVICE_PORT
          value: "50800"
        image: gcr.io/pixie-prod/pixie-prod-artifacts/curl:1.0
        name: cc-wait
      - command:
        - sh
        - -c
        - 'set -x; URL="https://${SERVICE_NAME}:${SERVICE_PORT}/healthz"; until [
          $(curl -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200 ]; do
          echo "waiting for ${URL}" sleep 2; done; '
        env:
        - name: SERVICE_NAME
          value: vizier-metadata
        - name: SERVICE_PORT
          value: "50400"
        image: gcr.io/pixie-prod/pixie-prod-artifacts/curl:1.0
        name: mds-wait
      volumes:
      - name: certs
        secret:
          secretName: service-tls-certs
      - configMap:
          name: proxy-envoy-config
        name: envoy-yaml
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
  name: vizier-pem
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  selector:
    matchLabels:
      app: pl-monitoring
      component: vizier
      name: vizier-pem
  template:
    metadata:
      annotations:
        {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
      labels:
        {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
        {{ $kv := split "=" $element -}}
        {{if eq (len $kv) 2 -}}
        {{ $kv._0 }}: "{{ $kv._1 }}"
        {{- end}}
        {{end}}{{end}}
        app: pl-monitoring
        component: vizier
        name: vizier-pem
        plane: data
    spec:
      containers:
      - args: []
        env:
        - name: TCMALLOC_SAMPLE_PARAMETER
          value: "1048576"
        - name: PL_CLIENT_TLS_CERT
          value: /certs/client.crt
        - name: PL_CLIENT_TLS_KEY
          value: /certs/client.key
        - name: PL_TLS_CA_CERT
          value: /certs/ca.crt
        - name: PL_DISABLE_SSL
          value: "false"
        - name: PL_HOST_PATH
          value: /host
        - name: PL_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: PL_HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: PL_JWT_SIGNING_KEY
          valueFrom:
            secretKeyRef:
              key: jwt-signing-key
              name: pl-cluster-secrets
        image: gcr.io/pixie-oss/pixie-prod/vizier/pem_image:0.7.12
        name: pem
        resources:
          limits:
            memory: {{ if .Values.pemMemoryLimit }}"{{ .Values.pemMemoryLimit }}"{{else}}"2Gi"{{end}}
        securityContext:
          capabilities:
            add:
            - SYS_PTRACE
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /host
          name: host-root
          readOnly: true
        - mountPath: /sys
          name: sys
          readOnly: true
        - mountPath: /certs
          name: certs
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      hostPID: true
      initContainers:
      - command:
        - sh
        - -c
        - 'set -x; URL="https://${SERVICE_NAME}:${SERVICE_PORT}/healthz"; until [
          $(curl -m 0.5 -s -o /dev/null -w "%{http_code}" -k ${URL}) -eq 200 ]; do
          echo "waiting for ${URL}" sleep 2; done; '
        env:
        - name: SERVICE_NAME
          value: vizier-query-broker
        - name: SERVICE_PORT
          value: "50300"
        image: gcr.io/pixie-prod/pixie-prod-artifacts/curl:1.0
        name: qb-wait
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /
          type: Directory
        name: host-root
      - hostPath:
          path: /sys
          type: Directory
        name: sys
      - name: certs
        secret:
          secretName: service-tls-certs
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 20
    type: RollingUpdate
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    {{if .Values.customAnnotations}}{{range $element := split "," .Values.customAnnotations -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
  labels:
    {{if .Values.customLabels}}{{range $element := split "," .Values.customLabels -}}
    {{ $kv := split "=" $element -}}
    {{if eq (len $kv) 2 -}}
    {{ $kv._0 }}: "{{ $kv._1 }}"
    {{- end}}
    {{end}}{{end}}
    app: pl-monitoring
    component: vizier
    vizier-bootstrap: "true"
  name: cert-provisioner-job
  namespace: {{ if .Release.Namespace }}{{ .Release.Namespace }}{{ else }}pl{{ end }}
spec:
  backoffLimit: 1
  completions: 1
  parallelism: 1
  template:
    metadata:
      labels:
        app: pl-monitoring
        component: vizier
        vizier-bootstrap: "true"
      name: cert-provisioner-job
    spec:
      containers:
      - env:
        - name: PL_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: pl-cloud-config
        - configMapRef:
            name: pl-cluster-config
            optional: true
        image: gcr.io/pixie-oss/pixie-prod/vizier/cert_provisioner_image:0.7.12
        name: provisioner
      restartPolicy: Never
      serviceAccountName: updater-service-account

{{- end}}